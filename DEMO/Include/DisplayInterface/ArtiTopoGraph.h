/*******************************************************************************
* Copyright (C), 2025~ , TOPDON Technology Co., Ltd. All rights reserved.
* 文件说明 : 文档类标识
* 功能描述 : ArtiDiag 系统拓扑图显示控件接口定义
* 创 建 人 : sujiya
* 实 现 人 :
* 审 核 人 : binchaolin
* 文件版本 : V1.00
* 修订记录 : 版本      修订人      修订日期      修订内容
*
*
*******************************************************************************/
#ifndef __ARTI_TOPO_GRAPH_H__
#define __ARTI_TOPO_GRAPH_H__

#include "StdInclude.h"
#include "ArtiGlobal.h"

/*
    CArtiTopoGraph 具有如下功能：
    1、ArtiSystem的列表扫描功能
    2、新增的系统拓扑图显示功能
*/


class _STD_SHOW_DLL_API_ CArtiTopoGraph
{
public:
    CArtiTopoGraph();
    ~CArtiTopoGraph();



    /********************************************************************************
    *    功  能：初始化拓扑图显示控件，同时设置标题文本
    * 
    *    参  数：strTitle       标题文本
    * 
    *            Type           拓扑图扫描组件类型
    *                           SST_TYPE_DEFAULT 默认系统类型
    *                           SST_TYPE_ADAS    ADAS系统扫描类型
    * 
    *    返回值：true 初始化成功 false 初始化失败
    *********************************************************************************/
    bool InitTitle(const std::string& strTitle, uint32_t Type);
    
    

    /********************************************************************************
    *    功  能：添加系统项
    * 
    *    参  数：strItem   系统项名称
    *            strAbbr   系统项缩写(Abbreviated)
    * 
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t AddItem(const std::string& strItem, const std::string& strAbbr);



    /********************************************************************************
    *    功  能：设置拓扑图的TMMY信息
    *
    *    参  数：
    *             strMake     品牌，例如“宝马”
    *             strModel    车型，例如“X5”
    *             strYear     年份，例如“2015”
    *             strType     类型，例如“DIAG”
    *
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetTMMY(
        const std::string& strMake,
        const std::string& strModel,
        const std::string& strYear,
        const std::string& strType = "DIAG");
    


    /********************************************************************************
    *    功  能：获取App应用排好序（系统扫描顺序）的系统集合，App根据AddItem的系统
    *            编号和InitTitle设置的类型，按照产品要求的动画效果进行分类与排序
    * 
    *            当前拓扑图无此需求，系统列表亦无此需求
    * 
    *    参  数：无
    * 
    *    返回值：App应用已排好序（扫描顺序）的系统集合
    *
    *    例 如，当前系统列表中有5个系统，0,2,4系统编号为动力系统类
    *           1,3系统编号为车身控制类
    *           则App可能的返回值为：0,2,4,1,3
    *********************************************************************************/
    std::vector<uint16_t> GetScanOrder();



    /********************************************************************************
    *    功  能：获取已选择的系统项集合
    *
    *    参  数：无
    *
    *    返回值：已选择的系统项集合
    *********************************************************************************/
    std::vector<std::string> GetScanItemsSysAbbr();
    std::vector<uint32_t> GetScanItems();



    /********************************************************************************
    *    功  能：获取是否需要重新扫描系统
    *            诊断应用通过这个接口，确定是否需要重新扫描系统
    * 
    *            一键清码无重新开始功能
    *
    *    参  数：无
    *
    *    返回值：true    需要重新扫描
    *            false   不需要重新扫描系统
    *********************************************************************************/
    bool GetScanRestart();



    /********************************************************************************
    *    功  能：设置车辆配置
    *
    *    参  数：vConfig   车辆配置
    *
    *    返回值：DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *********************************************************************************/
    uint32_t SetVehConfig(const std::vector<std::string>& vConfig);



    /********************************************************************************
    *    功  能：获取指定系统项的文本串
    * 
    *    参  数：uIndex 指定的系统项
    * 
    *    返回值：返回指定系统项的文本串
    *********************************************************************************/
    std::string GetItem(uint16_t uIndex);



    /********************************************************************************
    *    功  能：获取当前有故障码的系统项
    * 
    *    参  数：无
    * 
    *    返回值：有故障码的系统项，
    *             即扫描结果为“DF_ENUM_DTCNUM”的系统集合
    * 
    * 
    *     例如，当前系统列表中有5个系统，0,2,4系统编号有故障码，
    *          则返回的vector大小为3,值分别是0,2,4
    *********************************************************************************/
    std::vector<uint16_t> GetDtcItems();



    /********************************************************************************
    *    功  能：设置帮助按钮是否显示，帮助按钮默认不显示
    * 
    *    参  数：bIsVisible=true   显示帮助按钮
    *            bIsVisible=false 隐藏帮助按钮
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetHelpButtonVisible(bool bIsVisible = true);




    /********************************************************************************
    *    功  能：强制设置一键清码按钮是否显示，一键清码按钮默认显示
    * 
    *    参  数：bIsVisible=true   显示一键清码
    *            bIsVisible=false  隐藏一键清码
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    * 
    *    注 意： 在没有调用此接口下，“一键清码”按钮默认显示
    *            显示的条件是存在故障码
    * 
    *            如果SetClearButtonVisible设置为true，是否显示由是
    *            否存在故障码决定
    * 
    *            如果SetClearButtonVisible设置为false，将强制不显示
    *            即使存在故障码也不显示
    * 
    *********************************************************************************/
    uint32_t SetClearButtonVisible(bool bIsVisible = true);



    /********************************************************************************
    *    功  能：设置指定系统项的状态
    * 
    *    参  数：uIndex 指定的系统项
    *            strStatus 指定系统项的状态
    *            （正在初始化.../正在读码.../正在清码...）
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetItemStatus(uint16_t uIndex, const std::string& strStatus);



    /********************************************************************************
    *    功  能：设置指定系统项的扫描结果
    * 
    *    参  数：uIndex 指定的系统项
    *            uResult 指定系统项的最终结果
    *            （不存在/不支持/有码/无码/未知）
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetItemResult(uint16_t uIndex, uint32_t uResult);



    /********************************************************************************
    *    功  能：设置指定系统项的ADAS扫描结果
    * 
    *    参  数：uIndex 指定的系统项
    * 
    *            uResult 指定系统项的ADAS结果
    *            （存在ADAS/不存在ADAS）
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetItemAdas(uint16_t uIndex, uint32_t uAdasResult);



    /********************************************************************************
    *    功  能：设置扫描按键是否隐藏，控件默认显示
    * 
    *    参  数：bIsHidden=true 按钮区隐藏
    *            bIsHidden=false 按钮区显示
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetButtonAreaHidden(bool bIsHidden = true);



    /********************************************************************************
    *    功  能：设置“一键扫描”自动开始是否使能
    *
    *    参  数：bEnable   false,  第一次Show不返回DF_ID_SYS_START
    *                      true,   第一次Show返回DF_ID_SYS_START
    *
    *    说  明：默认不开启，如果设置了此参数，诊断应用在调用了
    *            第一次Show以后将开始系统扫描，即第一次Show的返回
    *            值为"DF_ID_SYS_START"
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetAtuoScanEnable(bool bEnable);



    /********************************************************************************
    *    功  能：设置系统扫描状态
    * 
    *    参  数：uStatus
    *                DF_SYS_SCAN_PAUSE,   暂停扫描
    *                DF_SYS_SCAN_FINISH,  扫描结束
    *            
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetScanStatus(uint32_t uStatus);



    /********************************************************************************
    *    功  能：设置一键清码状态
    *
    *    参  数：uStatus
    *               DF_SYS_CLEAR_FINISH,   一键清码结束
    *               DF_SYS_CLEAR_START,   一键清码开始
    * 
    *    返回值：  DF_FUNCTION_APP_CURRENT_NOT_SUPPORT，当前APP版本还没有此接口
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetClearStatus(uint32_t uStatus);



    /********************************************************************************
    *    功  能：设置本地svg路径
    *
    *    参  数：strPath  本地svg路径，如果strPath指定的路径串为非法路径（例如空串等）
    *                     返回失败 DF_SVG_PATH_IS_INVALID
    *
    *    返回值：  DF_SVG_API_NOT_SUPPORT,      当前APP版本还没有此接口
    *              DF_SVG_LOCAL_NOT_SUPPORT,    当前APP，对本地SVG文件不支持
    *              DF_SVG_PATH_OK， 路径合法,   设置成功
    *              DF_SVG_PATH_IS_INVALID,      路径非法，或者文件不存在
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetSvgPath(const std::string& strPath);


    /********************************************************************************
    *    功  能：设置本地svg数据是否使用
    *
    *    参  数：bUsedLocalData  true, 使用本地svg数据
    *
    *    返回值：  DF_SVG_API_NOT_SUPPORT,     当前APP版本还没有此接口
    *              DF_SVG_LOCAL_NOT_SUPPORT,   当前APP，对本地SVG文件不支持
    *              DF_SVG_USED_LOCAL_OK，      设置成功
    *              其他值，暂无意义
    *********************************************************************************/
    uint32_t SetUsedLocalData(bool bUsedLocalData = true);



    /********************************************************************************
    *    功  能：显示系统控件
    *    参  数：无
    *    返回值：uint32_t 组件界面按键返回值
    *        按键：一键扫描，一键清码，帮助，诊断报告，返回等
    * 
    *     说明
    *        如果返回 DF_ID_SYS_START 表示点击了“一键扫描”
    *       诊断程序需立即调用SetScanStatus(DF_SYS_SCAN_START)通知实现
    *        一键扫描开始
    * 
    *       如果返回 DF_ID_SYS_STOP  表示点击了“暂停”
    *       诊断程序需立即调用SetScanStatus(DF_SYS_SCAN_PAUSE)通知实现
    *        暂停扫描
    * 
    *       如果返回 DF_ID_SYS_ERASE 表示点击了“一键清码”
    *       诊断程序需立即调用SetClearStatus(DF_SYS_CLEAR_START)通知实现
    *        一键清码开始
    *********************************************************************************/
    uint32_t Show();

private:
    void*        m_pData;
};


#endif // __ARTI_TOPO_GRAPH_H__
