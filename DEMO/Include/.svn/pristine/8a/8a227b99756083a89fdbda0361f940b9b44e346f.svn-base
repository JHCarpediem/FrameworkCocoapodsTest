#ifndef __T_PROG_INTERFACE_EXPORT_H__
#define __T_PROG_INTERFACE_EXPORT_H__

#include "TproMaco.h"
#include "StdCommMaco.h"
#include "StdInclude.h"

#include <functional>

class CBinary;

#if defined (_WIN32)
#pragma warning(push)
#pragma warning(disable:4251)
#endif

#if ENABLE_TOPDON_PUBLIC_STDCOMM_NS
namespace TopDonPublicStdComm { class CTProgImpl; }
#else
class CTProgImpl;
#endif

class _STD_ECU_DLL_API_ CTProg
{

/************************************     T-PROG 通信层接口   ***************************************/


/*
        调用此接口举例:
*/
public:
    // 不允许指定无类型的功能操作
    CTProg() = delete;


    /*-----------------------------------------------------------------------------
      功    能：当前的操作类型

      参数说明：CTprogMaco::MainFuncType eMainType   主业务类型
                
                eMainType 可能值如下

                        MFT_SYS          0x01,    // 系统
                        MFT_EEPROM       0x02     // 存储器
                        MFT_MCU          0x03     // MCU
                        MFT_FREQ         0x04     // 遥控频率
                        MFT_RFID         0x05     // RFID

                        MFT_SYS  0x01     

      返 回 值：无

      说    明：应用一般不需要设置类型为MFT_SYS（1），TProg设备的功能接口不在此设置
    -----------------------------------------------------------------------------*/
    CTProg(CTprogMaco::MainFuncType eMainType);

    
    /*-----------------------------------------------------------------------------
      功    能：初始化当前操作类型

      参数说明：initData   初始化参数，参数数据来自xml

                例如 当前操作类型 MFT_EEPROM
                initData = <01, 03, 01, 00000080, 32, 65107555, 1110A000>
                具体意义表示如下：
                01          -->   编程类型为 EEPROM
                03          -->   子类型, 表示 IIC 操作类型
                01          -->   区域为EEPROM
                00000080    -->   大小为128
                32          -->   VCC电压，32=3.2V
                65107555    -->   管脚配置为 0x65107555
                1110A000    -->   属性配置位 0x1110A000

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：业务开始前必须先初始化，所用到的参数全部都在对应的XML数据表，
                XML格式和字段含义请参考xml数据格式
    -----------------------------------------------------------------------------*/
    uint32_t const Init(const CTprogMaco::stINIT &initData);


    /*-----------------------------------------------------------------------------
      功    能：检查连接情况

      参数说明：uint8_t ConnStatus
                                    0，芯片未连接
                                    1，芯片已连接

      返 回 值：0，读取成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：此接口正常情况下2秒内返回
    -----------------------------------------------------------------------------*/
    uint32_t const CheckConnStatus(uint8_t& ConnStatus);


    /*-----------------------------------------------------------------------------
      功    能：读取数据

      参数说明：Address      地址
                Length       想要读取的长度
                binRead      返回读到的数据
                Block        接口是否阻塞（直至数据返回，或者连接断开，或者超时）

      返 回 值：0,            读取成功
                8,            表示与设备没有连接，例如串口失去通信
                9,            表示等待设备（串口）数据返回超时
                0x8000XXXX,   数据可能在XXXX毫秒后才返回，应用需再次调用Read来获取结果
                              此返回值在实参Block为false才会出现

                其它值，状态码

      说    明：Block为true时，此接口为阻塞接口，正常情况下2秒内返回，但有时候会长时间返回
                Block为flase时，此接口为非阻塞接口，接口立即返回
    -----------------------------------------------------------------------------*/
    uint32_t const Read(uint32_t Address, uint32_t Length, CBinary& binRead, bool Block = true);


    /*-----------------------------------------------------------------------------
      功    能：写入数据
                写入数据耗时较长

      参数说明：Address      地址
                binRead      想要写入的数据

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：此接口为阻塞接口
    -----------------------------------------------------------------------------*/
    uint32_t const Write(uint32_t Address, const CBinary& binWrite);


    /*-----------------------------------------------------------------------------
      功    能：擦除数据
                擦除数据耗时较长

      参数说明：无

      返 回 值：0，设备收到擦除操作指令，将执行擦除操作
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：此接口为非阻塞接口，擦除数据是否成功需要通过获取状态接口GetSatus来确定
    -----------------------------------------------------------------------------*/
    uint32_t const Erase();


    /*-----------------------------------------------------------------------------
      功    能：关闭功能操作

      参数说明：无

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：完成功能操作后，必须执行Close
    -----------------------------------------------------------------------------*/
    uint32_t const Close();


    /*-----------------------------------------------------------------------------
      功    能：获取操作状态

      参数说明：Status   状态字节

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：状态字节
    -----------------------------------------------------------------------------*/
    uint32_t const GetSatus(uint8_t &Status);


    /*-----------------------------------------------------------------------------
      功    能：检查是否已经上锁

      参数说明：uint8_t IsLock
                              0，芯片未锁
                              1，芯片已锁

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：检查是否已经锁了
    -----------------------------------------------------------------------------*/
    uint32_t const ChechkIsLock(uint8_t& IsLock);


    /*-----------------------------------------------------------------------------
      功    能：芯片破解

      参数说明：Crk
                   0，芯片破解成功
                   1，芯片破解失败

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：检查是否已经锁了
    -----------------------------------------------------------------------------*/
    uint32_t const Crack(uint8_t& Crk);


    /*-----------------------------------------------------------------------------
      功    能：获取数据大小

      参数说明：Size     返回实际获取到的数据大小

      返 回 值：0，获取数据大小成功
                8，表示与设备没有连接，例如串口失去通信
                9，表示等待设备（串口）数据返回超时
                其它值，状态码

      说    明：获取数据大小
    -----------------------------------------------------------------------------*/
    uint32_t const GetSize(uint32_t &Size);


    /*-----------------------------------------------------------------------------
      功    能：设置密钥或加密相关的数据
                

      参数说明：binPassword      需要设置的密钥或加密相关的数据


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：设置密钥或加密相关的数据，此接口为阻塞接口
    -----------------------------------------------------------------------------*/
    uint32_t const SetPassword(const CBinary& binPassword);


    /*-----------------------------------------------------------------------------
      功    能：升级初始化


      参数说明：uint16_t Crc16       2字节CRC16，从固件文件开始计算

                uint16_t FmType      固件类型：
                                     0：本机固件
                                     1：蓝牙固件
                                     2：加密芯片固件
                                     3：加密芯片BOOT
                                     4：保留
                                     5：子应用程序
                                     ...

                uint32_t FmSize      固件大小


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：升级初始化，非阻塞接口
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const UpdateAppInit(uint16_t Crc16, uint16_t FmType, uint32_t FmSize);


    /*-----------------------------------------------------------------------------
      功    能：升级写入数据


      参数说明：uint32_t AddressIdx    写入数据偏移，从0开始

                const uint8_t* pData   固件文件内容指针

                uint32_t DataSize      本次数据写入长度


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：升级数据写入
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const UpdateAppData(uint32_t AddressIdx, const uint8_t* pData, uint32_t DataSize);


    /*-----------------------------------------------------------------------------
      功    能：升级结束


      参数说明：无


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：升级结束
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const UpdateAppEnd();


    /*-----------------------------------------------------------------------------
      功    能：跳转到BOOT（只有升级本机固件才用到） 

      参数说明：无

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：跳转到BOOT
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const UpdateAppJumpBoot();


    /*-----------------------------------------------------------------------------
      功    能：获取SAPP的信息

      参数说明：CTprogMaco::s_sAppFunsInfo& appFunInfo

                typedef struct
                {
                    uint16_t    appID;          // 应用ID
                    uint8_t     rev1[2];        // 保留
                    uint32_t    appVersion;     // 应用版本;
                    uint8_t     rev2[6];        // 保留
                    uint16_t    flag;           // 52D2
                }s_sAppFunsInfo;


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：获取子应用程序信息
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const GetSubAppInfo(CTprogMaco::s_sAppFunsInfo& appFunInfo);


    /*-----------------------------------------------------------------------------
      功    能：获取系统信息

      参数说明：无

      返 回 值："not connected"，设备没有连接，表示与设备没有连接，例如串口失去通信
                ""，系统信息

      说    明：获取系统信息
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    std::string const GetSysInfo();


    /*-----------------------------------------------------------------------------
      功    能：设置当前生产流程 

      参数说明：uint8_t Status 
                                01初始化，0x8A完成生产, 
                                其他数值含义自行定义，应从02开始定义

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：设置当前生产流程 01初始化，0x8A完成生产
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctSetStatus(uint8_t Status);


    /*-----------------------------------------------------------------------------
      功    能：获取产品信息

      参数说明：CTprogMaco::s_productInfo stProductInfo

                typedef enum
                {
                    ST_START    = 0x00, //未初始化
                    ST_INIT     = 0x01, //处于最初状态
                    ST_END      = 0x8A, //完成生产
                }e_macStatus;

                typedef struct
                {
                    uint8_t     SN[14];         //SN
                    uint8_t     BleMac[6];      //蓝牙MAC
                    uint8_t     APP_ver[3];     //APP版本
                    uint8_t     BLE_ver[2];     //蓝牙版本
                    uint8_t     ACM_ver[2];     //加密芯片程序版本
                    int8_t      BleName[32];    //蓝牙名称
                    uint8_t     RN[6];          //RN
                    e_macStatus status;         //状态(1个字节)
                    uint16_t    crc16;
                }s_productInfo;

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：获取产品信息
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctGetProductInfo(CTprogMaco::s_productInfo &stProductInfo);


    /*-----------------------------------------------------------------------------
      功    能：获取产品UID信息

      参数说明：std::vector<uint8_t> &vctUniqueId
                                     vctUniqueId        16字节

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：获取产品UID
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctGetUniqueId(std::vector<uint8_t> &vctUniqueId);
    uint32_t const FctGetUniqueId(uint8_t *pUniqueId, const uint32_t MaxUniqueIdLen);


    /*-----------------------------------------------------------------------------
      功    能：设置SN

      参数说明：const std::string& strSN
                                        

      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：设置SN
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctSetSN(const std::string& strSN);


    /*-----------------------------------------------------------------------------
      功    能：设置蓝牙MAC地址

      参数说明：const std::vector<uint8_t>& vctBleMac


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：设置蓝牙MAC地址
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctSetBleMac(const std::vector<uint8_t>& vctBleMac);


    /*-----------------------------------------------------------------------------
      功    能：设置蓝牙名称

      参数说明：const std::string& strBleName


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：设置蓝牙名称
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctSetBleName(const std::string& strBleName);


    /*-----------------------------------------------------------------------------
      功    能：设置RN

      参数说明：const std::string& strBleName


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：设置RN
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctSetRegCode(const std::string& strCode);


    /*-----------------------------------------------------------------------------
      功    能：获取按键状态

      参数说明：uint8_t& uiKeyStatus
                         按键状态，0按下 1松开


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：获取按键状态
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctGetPowerKey(uint8_t& uiKeyStatus);



    /*-----------------------------------------------------------------------------
      功    能：设置LED状态

      参数说明：uint8_t Status
                        设置LED灯状态，0灯灭，1灯亮


      返 回 值：0，成功
                8，表示与设备没有连接，例如串口失去通信

      说    明：设置LED灯状态，0灯灭，1灯亮
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctSetLedStatus(const uint8_t Status);



    /*-----------------------------------------------------------------------------
      功    能：生产测试项(硬件电路)执行接口，用于产测测试硬件电路

      参数说明：uint8_t ucTestNum
                        代表要测试的流程号，每个流程下执行不同的测试

                ucResult 执行结果, 0：无错误，其他：对应电路错误代码


      返 回 值：0，成功，其他：错误代码
                8，表示与设备没有连接，例如串口失去通信

      说    明：测试电路
                调用此接口主命令必须是CTprogMaco::MainFuncType::MFT_SYS
    -----------------------------------------------------------------------------*/
    uint32_t const FctTestRun(const uint8_t ucTestNum, uint8_t& ucResult);


public:
    /*-----------------------------------------------------------------------------
    功    能： 获取当前连接的TDART/TPROG的连接方式

    参数说明： 无

    返 回 值：
               "not connected"       TDART/TPROG没有连接
               "usb"                 当前是USB连接方式
               "system bluetooth"    当前是平板蓝牙连接方式
    -----------------------------------------------------------------------------*/
    static const std::string GetCommType();

public:
    virtual ~CTProg();

private:
    // 实现指针
#if ENABLE_TOPDON_PUBLIC_STDCOMM_NS
    const std::shared_ptr<TopDonPublicStdComm::CTProgImpl> m_upEcuImpl;
#else
    const std::shared_ptr<CTProgImpl> m_upEcuImpl;
#endif
};

#if defined (_WIN32)
#pragma warning(pop)
#endif

#endif  // __T_PROG_INTERFACE_EXPORT_H__